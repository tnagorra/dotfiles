#! /usr/bin/python
import sys
from os import listdir, environ
from os.path import join, expanduser
from pynvim import attach


def template_vimrc_background(colorscheme: str) -> str:
    command = (
        f"if !exists('g:colors_name') || g:colors_name != '{colorscheme}'\n"
        f"  colorscheme {colorscheme}\n"
        "endif")
    return command


def reload_neovim_sessions(colorscheme_file):
    def _reload(instance, colorscheme_file):
        nvim = attach('socket', path=instance)
        nvim.command(f'source {colorscheme_file}')

    def _get_all_instances():
        tmpdir = environ.get('TMPDIR', '/run/user/1000/')

        folders = [f for f in listdir(tmpdir) if f.startswith('nvim.') and f.endswith('.0')]

        instances = [join(tmpdir, folder) for folder in folders]

        return instances

    instances = _get_all_instances()

    failures = 0
    for instance in instances:
        try:
            _reload(instance, colorscheme_file)
        except Exception:
            failures += 1
    if (failures > 0):
        raise RuntimeError(f'Failed to reload {failures}/{len(instances)} nvim sessions')


def main():
    arguments = sys.argv

    if len(arguments) != 2:
        raise RuntimeError(f'Expected 1 argument but got {len(arguments) - 1}')

    colorscheme = arguments[1]

    vimrc_background_path = join('~', '.vimrc_background')

    try:
        with open(expanduser(vimrc_background_path), 'w') as vimrc_background_file:
            vimrc_background_content = template_vimrc_background(colorscheme)
            vimrc_background_file.write(vimrc_background_content)

        reload_neovim_sessions(vimrc_background_path)
    except OSError as e:
        print(e);
        raise RuntimeError(f'Could not save file: {vimrc_background_path}')

try:
    main()
except Exception as e:
    print(e)
    exit(0)
